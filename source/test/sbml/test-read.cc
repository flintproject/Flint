/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- vim:set ts=4 sw=4 sts=4 noet: */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include "sbml.h"

#include "database.h"
#include "db/driver.h"

#define BOOST_TEST_MODULE test_read
#include "test.h"

struct F : public test::MemoryFixture {

	void ReadAndCheck(const char *file,
					  std::vector<std::string> &variables,
					  std::vector<std::string> &input_values,
					  std::vector<std::string> &input_functions,
					  std::vector<std::string> &input_odes)
	{
		BOOST_CHECK_EQUAL(SaveGivenFile(driver_.db(), file), 1);
		BOOST_CHECK(sbml::Read(driver_.db()));

		test::Sql sql(driver_.db());
		sql.CheckRows("SELECT hex(space_id), type, id, name, unit, capacity FROM variables", variables);
		sql.CheckRows("SELECT hex(space_id), math FROM input_values", input_values);
		sql.CheckRows("SELECT hex(space_id), math FROM input_functions", input_functions);
		sql.CheckRows("SELECT hex(space_id), math FROM input_odes", input_odes);
	}
};

BOOST_FIXTURE_TEST_SUITE(test_read, F)

BOOST_AUTO_TEST_CASE(BIOMD0000000114) {
	std::vector<std::string> variables{
		"00000000000000000000000000000000 x 1 sbml:x dimensionless ",
		"00000000000000000000000000000000 x 2 sbml:y dimensionless ",
		"00000000000000000000000000000000 v 3 sbml:fy dimensionless ",
		"00000000000000000000000000000000 v 4 sbml:reaction_0000001 dimensionless ",
		"00000000000000000000000000000000 v 5 sbml:reaction_0000002 dimensionless ",
		"00000000000000000000000000000000 v 6 sbml:reaction_0000003 dimensionless ",
		"00000000000000000000000000000000 v 7 sbml:reaction_0000004 dimensionless ",
		"00000000000000000000000000000000 s 8 sbml:cytoplasm dimensionless ",
		"00000000000000000000000000000000 s 9 sbml:ER dimensionless ",
		"00000000000000000000000000000000 s 10 sbml:extracellular dimensionless ",
		"00000000000000000000000000000000 s 11 sbml:k dimensionless ",
		"00000000000000000000000000000000 s 12 sbml:alpha dimensionless ",
		"00000000000000000000000000000000 s 13 sbml:n dimensionless ",
		"00000000000000000000000000000000 s 14 sbml:a dimensionless ",
		"00000000000000000000000000000000 s 15 sbml:k1 dimensionless ",
		"00000000000000000000000000000000 s 16 sbml:beta dimensionless ",
		"00000000000000000000000000000000 s 17 sbml:gamma dimensionless "
	};

	std::vector<std::string> input_values{
		"00000000000000000000000000000000 (eq %sbml:x 1)",
		"00000000000000000000000000000000 (eq %sbml:y 1)",
		"00000000000000000000000000000000 (eq %sbml:cytoplasm 1)",
		"00000000000000000000000000000000 (eq %sbml:ER 1)",
		"00000000000000000000000000000000 (eq %sbml:extracellular 1)",
		"00000000000000000000000000000000 (eq %sbml:k 0.01)",
		"00000000000000000000000000000000 (eq %sbml:alpha 5)",
		"00000000000000000000000000000000 (eq %sbml:n 4)",
		"00000000000000000000000000000000 (eq %sbml:a 3)",
		"00000000000000000000000000000000 (eq %sbml:k1 2)",
		"00000000000000000000000000000000 (eq %sbml:beta 1)",
		"00000000000000000000000000000000 (eq %sbml:gamma 1)"
	};

	std::vector<std::string> input_functions{
		"00000000000000000000000000000000 (eq %sbml:fy (divide (power %sbml:y %sbml:n) (plus (power %sbml:a %sbml:n) (power %sbml:y %sbml:n))))",
		"00000000000000000000000000000000 (eq %sbml:reaction_0000001 (times %sbml:gamma %sbml:cytoplasm))",
		"00000000000000000000000000000000 (eq %sbml:reaction_0000002 (minus (times (times %sbml:k %sbml:x) %sbml:cytoplasm) (times (times %sbml:k1 %sbml:y) %sbml:ER)))",
		"00000000000000000000000000000000 (eq %sbml:reaction_0000003 (times (times %sbml:beta %sbml:y) %sbml:extracellular))",
		"00000000000000000000000000000000 (eq %sbml:reaction_0000004 (times (times (times %sbml:alpha %sbml:fy) %sbml:x) %sbml:cytoplasm))"
	};

	std::vector<std::string> input_odes{
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:x) (minus (divide (plus %sbml:reaction_0000002 %sbml:reaction_0000004) %sbml:ER)))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:y) (divide (plus (minus (plus %sbml:reaction_0000001 %sbml:reaction_0000002) %sbml:reaction_0000003) %sbml:reaction_0000004) %sbml:cytoplasm))"
	};

	ReadAndCheck(TEST_MODELS("BIOMD0000000114.xml"),
				 variables,
				 input_values,
				 input_functions,
				 input_odes);
}

BOOST_AUTO_TEST_CASE(BIOMD0000000152) {
	std::vector<std::string> variables{
		"00000000000000000000000000000000 x 1 sbml:D dimensionless ",
		"00000000000000000000000000000000 x 2 sbml:CDK5 dimensionless ",
		"00000000000000000000000000000000 x 3 sbml:D_CDK5 dimensionless ",
		"00000000000000000000000000000000 x 4 sbml:D75 dimensionless ",
		"00000000000000000000000000000000 x 5 sbml:CK1 dimensionless ",
		"00000000000000000000000000000000 x 6 sbml:D_CK1 dimensionless ",
		"00000000000000000000000000000000 x 7 sbml:D137 dimensionless ",
		"00000000000000000000000000000000 x 8 sbml:PKA dimensionless ",
		"00000000000000000000000000000000 x 9 sbml:D_PKA dimensionless ",
		"00000000000000000000000000000000 x 10 sbml:D34 dimensionless ",
		"00000000000000000000000000000000 x 11 sbml:D34_CDK5 dimensionless ",
		"00000000000000000000000000000000 x 12 sbml:D34_CK1 dimensionless ",
		"00000000000000000000000000000000 x 13 sbml:PP2B dimensionless ",
		"00000000000000000000000000000000 x 14 sbml:D34_PP2B dimensionless ",
		"00000000000000000000000000000000 x 15 sbml:D34_75 dimensionless ",
		"00000000000000000000000000000000 x 16 sbml:D34_137 dimensionless ",
		"00000000000000000000000000000000 x 17 sbml:D75CK1 dimensionless ",
		"00000000000000000000000000000000 x 18 sbml:D75_PKA dimensionless ",
		"00000000000000000000000000000000 x 19 sbml:PP2A dimensionless ",
		"00000000000000000000000000000000 x 20 sbml:D75_PP2A dimensionless ",
		"00000000000000000000000000000000 x 21 sbml:PP2AP dimensionless ",
		"00000000000000000000000000000000 x 22 sbml:D75_PP2AP dimensionless ",
		"00000000000000000000000000000000 x 23 sbml:D75_137 dimensionless ",
		"00000000000000000000000000000000 x 24 sbml:D137_CDK5 dimensionless ",
		"00000000000000000000000000000000 x 25 sbml:D137_PKA dimensionless ",
		"00000000000000000000000000000000 x 26 sbml:D137_PP2C dimensionless ",
		"00000000000000000000000000000000 x 27 sbml:PP2C dimensionless ",
		"00000000000000000000000000000000 x 28 sbml:D34_75_CK1 dimensionless ",
		"00000000000000000000000000000000 x 29 sbml:D34_137_CDK5 dimensionless ",
		"00000000000000000000000000000000 x 30 sbml:D34_75_137 dimensionless ",
		"00000000000000000000000000000000 x 31 sbml:D75_137_PKA dimensionless ",
		"00000000000000000000000000000000 x 32 sbml:D34_75_PP2B dimensionless ",
		"00000000000000000000000000000000 x 33 sbml:D34_137_PP2B dimensionless ",
		"00000000000000000000000000000000 x 34 sbml:D34_75_137_PP2B dimensionless ",
		"00000000000000000000000000000000 x 35 sbml:D34_75_PP2A dimensionless ",
		"00000000000000000000000000000000 x 36 sbml:D75_137_PP2A dimensionless ",
		"00000000000000000000000000000000 x 37 sbml:D34_75_134_PP2A dimensionless ",
		"00000000000000000000000000000000 x 38 sbml:D34_75_PP2AP dimensionless ",
		"00000000000000000000000000000000 x 39 sbml:D75_137_PP2AP dimensionless ",
		"00000000000000000000000000000000 x 40 sbml:D34_75_137_PP2AP dimensionless ",
		"00000000000000000000000000000000 x 41 sbml:D34_137_PP2C dimensionless ",
		"00000000000000000000000000000000 x 42 sbml:D75_137_PP2C dimensionless ",
		"00000000000000000000000000000000 x 43 sbml:PDE dimensionless ",
		"00000000000000000000000000000000 x 44 sbml:PP2Binactive dimensionless ",
		"00000000000000000000000000000000 x 45 sbml:D34_75_137_PP2C dimensionless ",
		"00000000000000000000000000000000 x 46 sbml:CK1P dimensionless ",
		"00000000000000000000000000000000 x 47 sbml:CK1P_PP2B dimensionless ",
		"00000000000000000000000000000000 x 48 sbml:PDE_PKA dimensionless ",
		"00000000000000000000000000000000 x 49 sbml:PDEP dimensionless ",
		"00000000000000000000000000000000 x 50 sbml:PP2A_PKA dimensionless ",
		"00000000000000000000000000000000 x 51 sbml:Ca dimensionless ",
		"00000000000000000000000000000000 x 52 sbml:PP2BinactiveCa2 dimensionless ",
		"00000000000000000000000000000000 x 53 sbml:R2C2 dimensionless ",
		"00000000000000000000000000000000 x 54 sbml:cAMP dimensionless ",
		"00000000000000000000000000000000 x 55 sbml:cAMP_R2C2 dimensionless ",
		"00000000000000000000000000000000 x 56 sbml:cAMP2_R2C2 dimensionless ",
		"00000000000000000000000000000000 x 57 sbml:cAMP3_R2C2 dimensionless ",
		"00000000000000000000000000000000 x 58 sbml:cAMP4_R2C2 dimensionless ",
		"00000000000000000000000000000000 x 59 sbml:cAMP4_R2C dimensionless ",
		"00000000000000000000000000000000 x 60 sbml:cAMP4_R2 dimensionless ",
		"00000000000000000000000000000000 x 61 sbml:cAMP_PDE dimensionless ",
		"00000000000000000000000000000000 x 62 sbml:AMP dimensionless ",
		"00000000000000000000000000000000 x 63 sbml:cAMP_PDEP dimensionless ",
		"00000000000000000000000000000000 v 64 sbml:von1 dimensionless ",
		"00000000000000000000000000000000 v 65 sbml:voff1 dimensionless ",
		"00000000000000000000000000000000 v 66 sbml:vcat1 dimensionless ",
		"00000000000000000000000000000000 v 67 sbml:von2 dimensionless ",
		"00000000000000000000000000000000 v 68 sbml:voff2 dimensionless ",
		"00000000000000000000000000000000 v 69 sbml:vcat2 dimensionless ",
		"00000000000000000000000000000000 v 70 sbml:von3 dimensionless ",
		"00000000000000000000000000000000 v 71 sbml:voff3 dimensionless ",
		"00000000000000000000000000000000 v 72 sbml:vcat3 dimensionless ",
		"00000000000000000000000000000000 v 73 sbml:von4 dimensionless ",
		"00000000000000000000000000000000 v 74 sbml:von5 dimensionless ",
		"00000000000000000000000000000000 v 75 sbml:von6 dimensionless ",
		"00000000000000000000000000000000 v 76 sbml:voff4 dimensionless ",
		"00000000000000000000000000000000 v 77 sbml:vcat4 dimensionless ",
		"00000000000000000000000000000000 v 78 sbml:voff5 dimensionless ",
		"00000000000000000000000000000000 v 79 sbml:vcat5 dimensionless ",
		"00000000000000000000000000000000 v 80 sbml:vcat6 dimensionless ",
		"00000000000000000000000000000000 v 81 sbml:voff6 dimensionless ",
		"00000000000000000000000000000000 v 82 sbml:von7 dimensionless ",
		"00000000000000000000000000000000 v 83 sbml:von8 dimensionless ",
		"00000000000000000000000000000000 v 84 sbml:von9 dimensionless ",
		"00000000000000000000000000000000 v 85 sbml:von10 dimensionless ",
		"00000000000000000000000000000000 v 86 sbml:voff7 dimensionless ",
		"00000000000000000000000000000000 v 87 sbml:vcat7 dimensionless ",
		"00000000000000000000000000000000 v 88 sbml:vcat8 dimensionless ",
		"00000000000000000000000000000000 v 89 sbml:voff8 dimensionless ",
		"00000000000000000000000000000000 v 90 sbml:vcat9 dimensionless ",
		"00000000000000000000000000000000 v 91 sbml:voff9 dimensionless ",
		"00000000000000000000000000000000 v 92 sbml:vcat10 dimensionless ",
		"00000000000000000000000000000000 v 93 sbml:voff10 dimensionless ",
		"00000000000000000000000000000000 v 94 sbml:von11 dimensionless ",
		"00000000000000000000000000000000 v 95 sbml:von12 dimensionless ",
		"00000000000000000000000000000000 v 96 sbml:von13 dimensionless ",
		"00000000000000000000000000000000 v 97 sbml:voff11 dimensionless ",
		"00000000000000000000000000000000 v 98 sbml:vcat11 dimensionless ",
		"00000000000000000000000000000000 v 99 sbml:voff12 dimensionless ",
		"00000000000000000000000000000000 v 100 sbml:vcat12 dimensionless ",
		"00000000000000000000000000000000 v 101 sbml:vcat13 dimensionless ",
		"00000000000000000000000000000000 v 102 sbml:voff13 dimensionless ",
		"00000000000000000000000000000000 v 103 sbml:von14 dimensionless ",
		"00000000000000000000000000000000 v 104 sbml:von18 dimensionless ",
		"00000000000000000000000000000000 v 105 sbml:voff18 dimensionless ",
		"00000000000000000000000000000000 v 106 sbml:voff14 dimensionless ",
		"00000000000000000000000000000000 v 107 sbml:vcat14 dimensionless ",
		"00000000000000000000000000000000 v 108 sbml:vcat18 dimensionless ",
		"00000000000000000000000000000000 v 109 sbml:von21 dimensionless ",
		"00000000000000000000000000000000 v 110 sbml:vcat21 dimensionless ",
		"00000000000000000000000000000000 v 111 sbml:voff21 dimensionless ",
		"00000000000000000000000000000000 v 112 sbml:von17 dimensionless ",
		"00000000000000000000000000000000 v 113 sbml:voff17 dimensionless ",
		"00000000000000000000000000000000 v 114 sbml:vcat17 dimensionless ",
		"00000000000000000000000000000000 v 115 sbml:von19 dimensionless ",
		"00000000000000000000000000000000 v 116 sbml:vcat19 dimensionless ",
		"00000000000000000000000000000000 v 117 sbml:voff19 dimensionless ",
		"00000000000000000000000000000000 v 118 sbml:von27 dimensionless ",
		"00000000000000000000000000000000 v 119 sbml:voff27 dimensionless ",
		"00000000000000000000000000000000 v 120 sbml:vcat27 dimensionless ",
		"00000000000000000000000000000000 v 121 sbml:von15 dimensionless ",
		"00000000000000000000000000000000 v 122 sbml:vcat15 dimensionless ",
		"00000000000000000000000000000000 v 123 sbml:voff15 dimensionless ",
		"00000000000000000000000000000000 v 124 sbml:von22 dimensionless ",
		"00000000000000000000000000000000 v 125 sbml:vcat22 dimensionless ",
		"00000000000000000000000000000000 v 126 sbml:voff22 dimensionless ",
		"00000000000000000000000000000000 v 127 sbml:von25 dimensionless ",
		"00000000000000000000000000000000 v 128 sbml:vcat25 dimensionless ",
		"00000000000000000000000000000000 v 129 sbml:voff25 dimensionless ",
		"00000000000000000000000000000000 v 130 sbml:von16 dimensionless ",
		"00000000000000000000000000000000 v 131 sbml:vcat16 dimensionless ",
		"00000000000000000000000000000000 v 132 sbml:voff16 dimensionless ",
		"00000000000000000000000000000000 v 133 sbml:von23 dimensionless ",
		"00000000000000000000000000000000 v 134 sbml:vcat23 dimensionless ",
		"00000000000000000000000000000000 v 135 sbml:voff23 dimensionless ",
		"00000000000000000000000000000000 v 136 sbml:vcat26 dimensionless ",
		"00000000000000000000000000000000 v 137 sbml:von26 dimensionless ",
		"00000000000000000000000000000000 v 138 sbml:voff26 dimensionless ",
		"00000000000000000000000000000000 v 139 sbml:von20 dimensionless ",
		"00000000000000000000000000000000 v 140 sbml:vcat20 dimensionless ",
		"00000000000000000000000000000000 v 141 sbml:voff20 dimensionless ",
		"00000000000000000000000000000000 v 142 sbml:von24 dimensionless ",
		"00000000000000000000000000000000 v 143 sbml:vcat24 dimensionless ",
		"00000000000000000000000000000000 v 144 sbml:voff24 dimensionless ",
		"00000000000000000000000000000000 v 145 sbml:von28 dimensionless ",
		"00000000000000000000000000000000 v 146 sbml:vcat28 dimensionless ",
		"00000000000000000000000000000000 v 147 sbml:voff28 dimensionless ",
		"00000000000000000000000000000000 v 148 sbml:von29 dimensionless ",
		"00000000000000000000000000000000 v 149 sbml:voff29 dimensionless ",
		"00000000000000000000000000000000 v 150 sbml:vcat29 dimensionless ",
		"00000000000000000000000000000000 v 151 sbml:vcat30 dimensionless ",
		"00000000000000000000000000000000 v 152 sbml:von31 dimensionless ",
		"00000000000000000000000000000000 v 153 sbml:vcat31 dimensionless ",
		"00000000000000000000000000000000 v 154 sbml:voff31 dimensionless ",
		"00000000000000000000000000000000 v 155 sbml:vcat32 dimensionless ",
		"00000000000000000000000000000000 v 156 sbml:von33 dimensionless ",
		"00000000000000000000000000000000 v 157 sbml:voff33 dimensionless ",
		"00000000000000000000000000000000 v 158 sbml:vcat33 dimensionless ",
		"00000000000000000000000000000000 v 159 sbml:vcat34 dimensionless ",
		"00000000000000000000000000000000 v 160 sbml:von35 dimensionless ",
		"00000000000000000000000000000000 v 161 sbml:von36 dimensionless ",
		"00000000000000000000000000000000 v 162 sbml:voff35 dimensionless ",
		"00000000000000000000000000000000 v 163 sbml:voff36 dimensionless ",
		"00000000000000000000000000000000 v 164 sbml:von37 dimensionless ",
		"00000000000000000000000000000000 v 165 sbml:von38 dimensionless ",
		"00000000000000000000000000000000 v 166 sbml:von39 dimensionless ",
		"00000000000000000000000000000000 v 167 sbml:von40 dimensionless ",
		"00000000000000000000000000000000 v 168 sbml:voff37 dimensionless ",
		"00000000000000000000000000000000 v 169 sbml:voff38 dimensionless ",
		"00000000000000000000000000000000 v 170 sbml:voff39 dimensionless ",
		"00000000000000000000000000000000 v 171 sbml:voff40 dimensionless ",
		"00000000000000000000000000000000 v 172 sbml:von41 dimensionless ",
		"00000000000000000000000000000000 v 173 sbml:voff41 dimensionless ",
		"00000000000000000000000000000000 v 174 sbml:von42 dimensionless ",
		"00000000000000000000000000000000 v 175 sbml:von43 dimensionless ",
		"00000000000000000000000000000000 v 176 sbml:von44 dimensionless ",
		"00000000000000000000000000000000 v 177 sbml:voff44 dimensionless ",
		"00000000000000000000000000000000 v 178 sbml:vcat44 dimensionless ",
		"00000000000000000000000000000000 v 179 sbml:von45 dimensionless ",
		"00000000000000000000000000000000 v 180 sbml:voff45 dimensionless ",
		"00000000000000000000000000000000 v 181 sbml:vcat45 dimensionless ",
		"00000000000000000000000000000000 v 182 sbml:v57 dimensionless ",
		"00000000000000000000000000000000 v 183 sbml:v58 dimensionless ",
		"00000000000000000000000000000000 s 184 sbml:Spine dimensionless ",
		"00000000000000000000000000000000 s 185 sbml:Empty dimensionless ",
		"00000000000000000000000000000000 s 186 sbml:k57 dimensionless ",
		"00000000000000000000000000000000 s 187 sbml:cAMP_delay dimensionless ",
		"00000000000000000000000000000000 s 188 sbml:cAMP_Ca_delay dimensionless ",
		"00000000000000000000000000000000 s 189 sbml:kon_high dimensionless ",
		"00000000000000000000000000000000 s 190 sbml:spike_duration dimensionless ",
		"00000000000000000000000000000000 s 191 sbml:spike_interval dimensionless ",
		"00000000000000000000000000000000 s 192 sbml:kon_low dimensionless "
	};

	std::vector<std::string> input_values{
		"00000000000000000000000000000000 (eq %sbml:D 4.98e-06)",
		"00000000000000000000000000000000 (eq %sbml:CDK5 2e-07)",
		"00000000000000000000000000000000 (eq %sbml:D_CDK5 0)",
		"00000000000000000000000000000000 (eq %sbml:D75 0)",
		"00000000000000000000000000000000 (eq %sbml:CK1 1.66e-07)",
		"00000000000000000000000000000000 (eq %sbml:D_CK1 0)",
		"00000000000000000000000000000000 (eq %sbml:D137 0)",
		"00000000000000000000000000000000 (eq %sbml:PKA 0)",
		"00000000000000000000000000000000 (eq %sbml:D_PKA 0)",
		"00000000000000000000000000000000 (eq %sbml:D34 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_CDK5 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_CK1 0)",
		"00000000000000000000000000000000 (eq %sbml:PP2B 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_PP2B 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_75 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_137 0)",
		"00000000000000000000000000000000 (eq %sbml:D75CK1 0)",
		"00000000000000000000000000000000 (eq %sbml:D75_PKA 0)",
		"00000000000000000000000000000000 (eq %sbml:PP2A 2e-07)",
		"00000000000000000000000000000000 (eq %sbml:D75_PP2A 0)",
		"00000000000000000000000000000000 (eq %sbml:PP2AP 0)",
		"00000000000000000000000000000000 (eq %sbml:D75_PP2AP 0)",
		"00000000000000000000000000000000 (eq %sbml:D75_137 0)",
		"00000000000000000000000000000000 (eq %sbml:D137_CDK5 0)",
		"00000000000000000000000000000000 (eq %sbml:D137_PKA 0)",
		"00000000000000000000000000000000 (eq %sbml:D137_PP2C 0)",
		"00000000000000000000000000000000 (eq %sbml:PP2C 1.33e-07)",
		"00000000000000000000000000000000 (eq %sbml:D34_75_CK1 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_137_CDK5 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_75_137 0)",
		"00000000000000000000000000000000 (eq %sbml:D75_137_PKA 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_75_PP2B 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_137_PP2B 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_75_137_PP2B 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_75_PP2A 0)",
		"00000000000000000000000000000000 (eq %sbml:D75_137_PP2A 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_75_134_PP2A 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_75_PP2AP 0)",
		"00000000000000000000000000000000 (eq %sbml:D75_137_PP2AP 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_75_137_PP2AP 0)",
		"00000000000000000000000000000000 (eq %sbml:D34_137_PP2C 0)",
		"00000000000000000000000000000000 (eq %sbml:D75_137_PP2C 0)",
		"00000000000000000000000000000000 (eq %sbml:PDE 2e-06)",
		"00000000000000000000000000000000 (eq %sbml:PP2Binactive 3.32e-07)",
		"00000000000000000000000000000000 (eq %sbml:D34_75_137_PP2C 0)",
		"00000000000000000000000000000000 (eq %sbml:CK1P 0)",
		"00000000000000000000000000000000 (eq %sbml:CK1P_PP2B 0)",
		"00000000000000000000000000000000 (eq %sbml:PDE_PKA 0)",
		"00000000000000000000000000000000 (eq %sbml:PDEP 0)",
		"00000000000000000000000000000000 (eq %sbml:PP2A_PKA 0)",
		"00000000000000000000000000000000 (eq %sbml:Ca 0)",
		"00000000000000000000000000000000 (eq %sbml:PP2BinactiveCa2 0)",
		"00000000000000000000000000000000 (eq %sbml:R2C2 6.64e-06)",
		"00000000000000000000000000000000 (eq %sbml:cAMP 0)",
		"00000000000000000000000000000000 (eq %sbml:cAMP_R2C2 0)",
		"00000000000000000000000000000000 (eq %sbml:cAMP2_R2C2 0)",
		"00000000000000000000000000000000 (eq %sbml:cAMP3_R2C2 0)",
		"00000000000000000000000000000000 (eq %sbml:cAMP4_R2C2 0)",
		"00000000000000000000000000000000 (eq %sbml:cAMP4_R2C 0)",
		"00000000000000000000000000000000 (eq %sbml:cAMP4_R2 0)",
		"00000000000000000000000000000000 (eq %sbml:cAMP_PDE 0)",
		"00000000000000000000000000000000 (eq %sbml:AMP 0)",
		"00000000000000000000000000000000 (eq %sbml:cAMP_PDEP 0)",
		"00000000000000000000000000000000 (eq %sbml:Spine 1e-15)",
		"00000000000000000000000000000000 (eq %sbml:Empty 0)",
		"00000000000000000000000000000000 (eq %sbml:k57 2.5e-08)",
		"00000000000000000000000000000000 (eq %sbml:cAMP_delay 400)",
		"00000000000000000000000000000000 (eq %sbml:cAMP_Ca_delay 50)",
		"00000000000000000000000000000000 (eq %sbml:kon_high 6.6e-06)",
		"00000000000000000000000000000000 (eq %sbml:spike_duration 2)",
		"00000000000000000000000000000000 (eq %sbml:spike_interval 2)",
		"00000000000000000000000000000000 (eq %sbml:kon_low 2.5e-08)"
	};

	std::vector<std::string> input_functions{
		"00000000000000000000000000000000 (eq %sbml:von1 (times (times (times %sbml:Spine 5.6e+06) %sbml:D) %sbml:CDK5))",
		"00000000000000000000000000000000 (eq %sbml:voff1 (times (times %sbml:Spine %sbml:D_CDK5) 12))",
		"00000000000000000000000000000000 (eq %sbml:vcat1 (times (times %sbml:Spine %sbml:D_CDK5) 3))",
		"00000000000000000000000000000000 (eq %sbml:von2 (times (times (times %sbml:Spine %sbml:D) %sbml:CK1) 4.4e+06))",
		"00000000000000000000000000000000 (eq %sbml:voff2 (times (times %sbml:Spine 12) %sbml:D_CK1))",
		"00000000000000000000000000000000 (eq %sbml:vcat2 (times (times %sbml:Spine 3) %sbml:D_CK1))",
		"00000000000000000000000000000000 (eq %sbml:von3 (times (times (times %sbml:Spine %sbml:D) %sbml:PKA) 5.6e+06))",
		"00000000000000000000000000000000 (eq %sbml:voff3 (times (times %sbml:Spine %sbml:D_PKA) 10.8))",
		"00000000000000000000000000000000 (eq %sbml:vcat3 (times (times %sbml:Spine %sbml:D_PKA) 2.7))",
		"00000000000000000000000000000000 (eq %sbml:von4 (times (times (times %sbml:Spine %sbml:D34) %sbml:CDK5) 5.6e+06))",
		"00000000000000000000000000000000 (eq %sbml:von5 (times (times (times %sbml:Spine %sbml:D34) %sbml:CK1) 4.4e+06))",
		"00000000000000000000000000000000 (eq %sbml:von6 (times (times (times %sbml:Spine %sbml:D34) %sbml:PP2B) 1e+07))",
		"00000000000000000000000000000000 (eq %sbml:voff4 (times (times %sbml:Spine %sbml:D34_CDK5) 12))",
		"00000000000000000000000000000000 (eq %sbml:vcat4 (times (times %sbml:Spine %sbml:D34_CDK5) 3))",
		"00000000000000000000000000000000 (eq %sbml:voff5 (times (times %sbml:Spine %sbml:D34_CK1) 12))",
		"00000000000000000000000000000000 (eq %sbml:vcat5 (times (times %sbml:Spine %sbml:D34_CK1) 3))",
		"00000000000000000000000000000000 (eq %sbml:vcat6 (times (times %sbml:Spine %sbml:D34_PP2B) 4))",
		"00000000000000000000000000000000 (eq %sbml:voff6 (times (times %sbml:Spine %sbml:D34_PP2B) 16))",
		"00000000000000000000000000000000 (eq %sbml:von7 (times (times (times %sbml:Spine %sbml:D75) %sbml:CK1) 4.4e+06))",
		"00000000000000000000000000000000 (eq %sbml:von8 (times (times (times %sbml:Spine %sbml:D75) %sbml:PKA) 5.6e+06))",
		"00000000000000000000000000000000 (eq %sbml:von9 (times (times (times %sbml:Spine %sbml:D75) %sbml:PP2A) 3.8e+06))",
		"00000000000000000000000000000000 (eq %sbml:von10 (times (times (times %sbml:Spine %sbml:D75) %sbml:PP2AP) 1.7e+07))",
		"00000000000000000000000000000000 (eq %sbml:voff7 (times (times %sbml:Spine %sbml:D75CK1) 12))",
		"00000000000000000000000000000000 (eq %sbml:vcat7 (times (times %sbml:Spine %sbml:D75CK1) 3))",
		"00000000000000000000000000000000 (eq %sbml:vcat8 (times (times %sbml:Spine %sbml:D75_PKA) 0))",
		"00000000000000000000000000000000 (eq %sbml:voff8 (times (times %sbml:Spine %sbml:D75_PKA) 10.8))",
		"00000000000000000000000000000000 (eq %sbml:vcat9 (times (times %sbml:Spine %sbml:D75_PP2A) 10))",
		"00000000000000000000000000000000 (eq %sbml:voff9 (times (times %sbml:Spine %sbml:D75_PP2A) 24))",
		"00000000000000000000000000000000 (eq %sbml:vcat10 (times (times %sbml:Spine %sbml:D75_PP2AP) 24))",
		"00000000000000000000000000000000 (eq %sbml:voff10 (times (times %sbml:Spine %sbml:D75_PP2AP) 40))",
		"00000000000000000000000000000000 (eq %sbml:von11 (times (times (times %sbml:Spine %sbml:D137) %sbml:CDK5) 5.6e+06))",
		"00000000000000000000000000000000 (eq %sbml:von12 (times (times (times %sbml:Spine %sbml:D137) %sbml:PKA) 5.6e+06))",
		"00000000000000000000000000000000 (eq %sbml:von13 (times (times (times %sbml:Spine %sbml:D137) %sbml:PP2C) 7.5e+06))",
		"00000000000000000000000000000000 (eq %sbml:voff11 (times (times %sbml:Spine %sbml:D137_CDK5) 12))",
		"00000000000000000000000000000000 (eq %sbml:vcat11 (times (times %sbml:Spine %sbml:D137_CDK5) 3))",
		"00000000000000000000000000000000 (eq %sbml:voff12 (times (times %sbml:Spine %sbml:D137_PKA) 10.8))",
		"00000000000000000000000000000000 (eq %sbml:vcat12 (times (times %sbml:Spine %sbml:D137_PKA) 2.7))",
		"00000000000000000000000000000000 (eq %sbml:vcat13 (times (times %sbml:Spine %sbml:D137_PP2C) 3))",
		"00000000000000000000000000000000 (eq %sbml:voff13 (times (times %sbml:Spine %sbml:D137_PP2C) 12))",
		"00000000000000000000000000000000 (eq %sbml:von14 (times (times (times %sbml:Spine %sbml:D34_75) %sbml:CK1) 4.4e+06))",
		"00000000000000000000000000000000 (eq %sbml:von18 (times (times (times %sbml:Spine %sbml:D34_137) %sbml:CDK5) 5.6e+06))",
		"00000000000000000000000000000000 (eq %sbml:voff18 (times (times %sbml:Spine %sbml:D34_137_CDK5) 12))",
		"00000000000000000000000000000000 (eq %sbml:voff14 (times (times %sbml:Spine %sbml:D34_75_CK1) 12))",
		"00000000000000000000000000000000 (eq %sbml:vcat14 (times (times %sbml:Spine %sbml:D34_75_CK1) 3))",
		"00000000000000000000000000000000 (eq %sbml:vcat18 (times (times %sbml:Spine %sbml:D34_137_CDK5) 3))",
		"00000000000000000000000000000000 (eq %sbml:von21 (times (times (times %sbml:Spine %sbml:D75_137) %sbml:PKA) 5.6e+06))",
		"00000000000000000000000000000000 (eq %sbml:vcat21 (times (times %sbml:Spine %sbml:D75_137_PKA) 0))",
		"00000000000000000000000000000000 (eq %sbml:voff21 (times (times %sbml:Spine %sbml:D75_137_PKA) 10.8))",
		"00000000000000000000000000000000 (eq %sbml:von17 (times (times (times %sbml:Spine %sbml:D34_75) %sbml:PP2B) 1e+07))",
		"00000000000000000000000000000000 (eq %sbml:voff17 (times (times %sbml:Spine %sbml:D34_75_PP2B) 1600))",
		"00000000000000000000000000000000 (eq %sbml:vcat17 (times (times %sbml:Spine %sbml:D34_75_PP2B) 4))",
		"00000000000000000000000000000000 (eq %sbml:von19 (times (times (times %sbml:Spine %sbml:D34_137) %sbml:PP2B) 75000))",
		"00000000000000000000000000000000 (eq %sbml:vcat19 (times (times %sbml:Spine %sbml:D34_137_PP2B) 0.03))",
		"00000000000000000000000000000000 (eq %sbml:voff19 (times (times %sbml:Spine %sbml:D34_137_PP2B) 0.12))",
		"00000000000000000000000000000000 (eq %sbml:von27 (times (times (times %sbml:Spine %sbml:D34_75_137) %sbml:PP2B) 75000))",
		"00000000000000000000000000000000 (eq %sbml:voff27 (times (times %sbml:Spine %sbml:D34_75_137_PP2B) 120))",
		"00000000000000000000000000000000 (eq %sbml:vcat27 (times (times %sbml:Spine %sbml:D34_75_137_PP2B) 0.03))",
		"00000000000000000000000000000000 (eq %sbml:von15 (times (times (times %sbml:Spine %sbml:D34_75) %sbml:PP2A) 3.8e+06))",
		"00000000000000000000000000000000 (eq %sbml:vcat15 (times (times %sbml:Spine %sbml:D34_75_PP2A) 10))",
		"00000000000000000000000000000000 (eq %sbml:voff15 (times (times %sbml:Spine %sbml:D34_75_PP2A) 24))",
		"00000000000000000000000000000000 (eq %sbml:von22 (times (times (times %sbml:Spine %sbml:D75_137) %sbml:PP2A) 3.8e+06))",
		"00000000000000000000000000000000 (eq %sbml:vcat22 (times (times %sbml:Spine %sbml:D75_137_PP2A) 10))",
		"00000000000000000000000000000000 (eq %sbml:voff22 (times (times %sbml:Spine %sbml:D75_137_PP2A) 24))",
		"00000000000000000000000000000000 (eq %sbml:von25 (times (times (times %sbml:Spine %sbml:D34_75_137) %sbml:PP2A) 3.8e+06))",
		"00000000000000000000000000000000 (eq %sbml:vcat25 (times (times %sbml:Spine %sbml:D34_75_134_PP2A) 10))",
		"00000000000000000000000000000000 (eq %sbml:voff25 (times (times %sbml:Spine %sbml:D34_75_134_PP2A) 24))",
		"00000000000000000000000000000000 (eq %sbml:von16 (times (times (times %sbml:Spine %sbml:D34_75) %sbml:PP2AP) 1.7e+07))",
		"00000000000000000000000000000000 (eq %sbml:vcat16 (times (times %sbml:Spine %sbml:D34_75_PP2AP) 24))",
		"00000000000000000000000000000000 (eq %sbml:voff16 (times (times %sbml:Spine %sbml:D34_75_PP2AP) 40))",
		"00000000000000000000000000000000 (eq %sbml:von23 (times (times (times %sbml:Spine %sbml:D75_137) %sbml:PP2AP) 1.7e+07))",
		"00000000000000000000000000000000 (eq %sbml:vcat23 (times (times %sbml:Spine %sbml:D75_137_PP2AP) 24))",
		"00000000000000000000000000000000 (eq %sbml:voff23 (times (times %sbml:Spine %sbml:D75_137_PP2AP) 40))",
		"00000000000000000000000000000000 (eq %sbml:vcat26 (times (times %sbml:Spine %sbml:D34_75_137_PP2AP) 24))",
		"00000000000000000000000000000000 (eq %sbml:von26 (times (times (times %sbml:Spine %sbml:D34_75_137) %sbml:PP2AP) 1.7e+07))",
		"00000000000000000000000000000000 (eq %sbml:voff26 (times (times %sbml:Spine %sbml:D34_75_137_PP2AP) 40))",
		"00000000000000000000000000000000 (eq %sbml:von20 (times (times (times %sbml:Spine %sbml:D34_137) %sbml:PP2C) 7.5e+06))",
		"00000000000000000000000000000000 (eq %sbml:vcat20 (times (times %sbml:Spine %sbml:D34_137_PP2C) 3))",
		"00000000000000000000000000000000 (eq %sbml:voff20 (times (times %sbml:Spine %sbml:D34_137_PP2C) 12))",
		"00000000000000000000000000000000 (eq %sbml:von24 (times (times (times %sbml:Spine %sbml:D75_137) %sbml:PP2C) 7.5e+06))",
		"00000000000000000000000000000000 (eq %sbml:vcat24 (times (times %sbml:Spine %sbml:D75_137_PP2C) 3))",
		"00000000000000000000000000000000 (eq %sbml:voff24 (times (times %sbml:Spine %sbml:D75_137_PP2C) 12))",
		"00000000000000000000000000000000 (eq %sbml:von28 (times (times (times %sbml:Spine %sbml:D34_75_137) %sbml:PP2C) 7.5e+06))",
		"00000000000000000000000000000000 (eq %sbml:vcat28 (times (times %sbml:Spine %sbml:D34_75_137_PP2C) 3))",
		"00000000000000000000000000000000 (eq %sbml:voff28 (times (times %sbml:Spine %sbml:D34_75_137_PP2C) 12))",
		"00000000000000000000000000000000 (eq %sbml:von29 (times (times (times %sbml:Spine %sbml:CK1P) %sbml:PP2B) 3e+07))",
		"00000000000000000000000000000000 (eq %sbml:voff29 (times (times %sbml:Spine %sbml:CK1P_PP2B) 24))",
		"00000000000000000000000000000000 (eq %sbml:vcat29 (times (times %sbml:Spine %sbml:CK1P_PP2B) 6))",
		"00000000000000000000000000000000 (eq %sbml:vcat30 (times (times %sbml:Spine %sbml:CK1) 1))",
		"00000000000000000000000000000000 (eq %sbml:von31 (times (times (times %sbml:Spine %sbml:PDE) %sbml:PKA) 6e+06))",
		"00000000000000000000000000000000 (eq %sbml:vcat31 (times (times %sbml:Spine %sbml:PDE_PKA) 9))",
		"00000000000000000000000000000000 (eq %sbml:voff31 (times (times %sbml:Spine %sbml:PDE_PKA) 36))",
		"00000000000000000000000000000000 (eq %sbml:vcat32 (times (times %sbml:Spine %sbml:PDEP) 0.1))",
		"00000000000000000000000000000000 (eq %sbml:von33 (times (times (times %sbml:Spine %sbml:PP2A) %sbml:PKA) 1e+07))",
		"00000000000000000000000000000000 (eq %sbml:voff33 (times (times %sbml:Spine %sbml:PP2A_PKA) 16))",
		"00000000000000000000000000000000 (eq %sbml:vcat33 (times (times %sbml:Spine %sbml:PP2A_PKA) 4))",
		"00000000000000000000000000000000 (eq %sbml:vcat34 (times (times %sbml:Spine %sbml:PP2AP) 5))",
		"00000000000000000000000000000000 (eq %sbml:von35 (times (times (times (times %sbml:Spine %sbml:PP2Binactive) %sbml:Ca) %sbml:Ca) 1e+15))",
		"00000000000000000000000000000000 (eq %sbml:von36 (times (times (times (times %sbml:Spine %sbml:PP2BinactiveCa2) %sbml:Ca) %sbml:Ca) 3e+15))",
		"00000000000000000000000000000000 (eq %sbml:voff35 (times (times %sbml:Spine %sbml:PP2BinactiveCa2) 1))",
		"00000000000000000000000000000000 (eq %sbml:voff36 (times (times %sbml:Spine %sbml:PP2B) 1))",
		"00000000000000000000000000000000 (eq %sbml:von37 (times (times (times %sbml:Spine %sbml:R2C2) %sbml:cAMP) 5.4e+07))",
		"00000000000000000000000000000000 (eq %sbml:von38 (times (times (times %sbml:Spine %sbml:cAMP_R2C2) %sbml:cAMP) 5.4e+07))",
		"00000000000000000000000000000000 (eq %sbml:von39 (times (times (times %sbml:Spine %sbml:cAMP2_R2C2) %sbml:cAMP) 7.5e+07))",
		"00000000000000000000000000000000 (eq %sbml:von40 (times (times (times %sbml:Spine %sbml:cAMP3_R2C2) %sbml:cAMP) 7.5e+07))",
		"00000000000000000000000000000000 (eq %sbml:voff37 (times (times %sbml:Spine %sbml:cAMP_R2C2) 33))",
		"00000000000000000000000000000000 (eq %sbml:voff38 (times (times %sbml:Spine %sbml:cAMP2_R2C2) 33))",
		"00000000000000000000000000000000 (eq %sbml:voff39 (times (times %sbml:Spine %sbml:cAMP3_R2C2) 110))",
		"00000000000000000000000000000000 (eq %sbml:voff40 (times (times %sbml:Spine %sbml:cAMP4_R2C2) 32.5))",
		"00000000000000000000000000000000 (eq %sbml:von41 (times (times (times %sbml:Spine %sbml:cAMP4_R2C) %sbml:PKA) 1.8e+07))",
		"00000000000000000000000000000000 (eq %sbml:voff41 (times (times %sbml:Spine %sbml:cAMP4_R2C2) 60))",
		"00000000000000000000000000000000 (eq %sbml:von42 (times (times (times %sbml:Spine %sbml:cAMP4_R2) %sbml:PKA) 1.8e+07))",
		"00000000000000000000000000000000 (eq %sbml:von43 (times (times %sbml:Spine %sbml:cAMP4_R2C) 60))",
		"00000000000000000000000000000000 (eq %sbml:von44 (times (times (times %sbml:Spine %sbml:cAMP) %sbml:PDE) 2.52e+06))",
		"00000000000000000000000000000000 (eq %sbml:voff44 (times (times %sbml:Spine %sbml:cAMP_PDE) 40))",
		"00000000000000000000000000000000 (eq %sbml:vcat44 (times (times %sbml:Spine %sbml:cAMP_PDE) 10))",
		"00000000000000000000000000000000 (eq %sbml:von45 (times (times (times %sbml:Spine %sbml:cAMP) %sbml:PDEP) 5.04e+06))",
		"00000000000000000000000000000000 (eq %sbml:voff45 (times (times %sbml:Spine %sbml:cAMP_PDEP) 80))",
		"00000000000000000000000000000000 (eq %sbml:vcat45 (times (times %sbml:Spine %sbml:cAMP_PDEP) 20))",
		"00000000000000000000000000000000 (eq %sbml:v57 (times %sbml:Spine %sbml:k57))",
		"00000000000000000000000000000000 (eq %sbml:v58 (times (times %sbml:Spine %sbml:Ca) 1.7))"
	};

	std::vector<std::string> input_odes{
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D) (divide (plus (plus (plus (plus (plus (minus (plus (minus (minus %sbml:voff1 %sbml:von1) %sbml:von2) %sbml:voff2) %sbml:von3) %sbml:voff3) %sbml:vcat6) %sbml:vcat9) %sbml:vcat10) %sbml:vcat13) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:CDK5) (divide (plus (plus (minus (plus (plus (minus (plus (plus (minus (plus (minus %sbml:voff1 %sbml:von1) %sbml:vcat1) %sbml:von4) %sbml:voff4) %sbml:vcat4) %sbml:von11) %sbml:voff11) %sbml:vcat11) %sbml:von18) %sbml:voff18) %sbml:vcat18) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D_CDK5) (divide (minus (minus %sbml:von1 %sbml:voff1) %sbml:vcat1) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D75) (divide (plus (plus (plus (plus (plus (plus (minus (minus (minus (minus %sbml:vcat1 %sbml:von7) %sbml:von8) %sbml:von9) %sbml:von10) %sbml:voff7) %sbml:voff8) %sbml:voff9) %sbml:voff10) %sbml:vcat17) %sbml:vcat24) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:CK1) (divide (minus (plus (plus (plus (minus (plus (plus (minus (plus (plus (minus (plus (minus %sbml:voff2 %sbml:von2) %sbml:vcat2) %sbml:von5) %sbml:voff5) %sbml:vcat5) %sbml:von7) %sbml:voff7) %sbml:vcat7) %sbml:von14) %sbml:voff14) %sbml:vcat14) %sbml:vcat29) %sbml:vcat30) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D_CK1) (divide (minus (minus %sbml:von2 %sbml:voff2) %sbml:vcat2) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D137) (divide (plus (plus (plus (plus (plus (plus (minus (minus (minus %sbml:vcat2 %sbml:von11) %sbml:von12) %sbml:von13) %sbml:voff11) %sbml:voff12) %sbml:voff13) %sbml:vcat19) %sbml:vcat22) %sbml:vcat23) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:PKA) (divide (plus (minus (plus (minus (plus (plus (minus (plus (plus (minus (plus (plus (minus (plus (plus (minus (plus (plus (minus (plus (minus %sbml:voff3 %sbml:von3) %sbml:vcat3) %sbml:von8) %sbml:vcat8) %sbml:voff8) %sbml:von12) %sbml:voff12) %sbml:vcat12) %sbml:von21) %sbml:vcat21) %sbml:voff21) %sbml:von31) %sbml:vcat31) %sbml:voff31) %sbml:von33) %sbml:voff33) %sbml:vcat33) %sbml:von41) %sbml:voff41) %sbml:von42) %sbml:von43) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D_PKA) (divide (minus (minus %sbml:von3 %sbml:voff3) %sbml:vcat3) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34) (divide (plus (plus (plus (plus (plus (plus (minus (minus (minus %sbml:vcat3 %sbml:von4) %sbml:von5) %sbml:von6) %sbml:voff4) %sbml:voff5) %sbml:voff6) %sbml:vcat15) %sbml:vcat16) %sbml:vcat20) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_CDK5) (divide (minus (minus %sbml:von4 %sbml:voff4) %sbml:vcat4) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_CK1) (divide (minus (minus %sbml:von5 %sbml:voff5) %sbml:vcat5) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:PP2B) (divide (minus (plus (plus (plus (minus (plus (plus (minus (plus (plus (minus (plus (plus (minus (plus (minus %sbml:vcat6 %sbml:von6) %sbml:voff6) %sbml:von17) %sbml:voff17) %sbml:vcat17) %sbml:von19) %sbml:vcat19) %sbml:voff19) %sbml:von27) %sbml:voff27) %sbml:vcat27) %sbml:von29) %sbml:voff29) %sbml:vcat29) %sbml:von36) %sbml:voff36) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_PP2B) (divide (minus (minus %sbml:von6 %sbml:vcat6) %sbml:voff6) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_75) (divide (plus (plus (minus (plus (minus (plus (minus (plus (minus (plus %sbml:vcat4 %sbml:vcat8) %sbml:von14) %sbml:voff14) %sbml:von17) %sbml:voff17) %sbml:von15) %sbml:voff15) %sbml:von16) %sbml:voff16) %sbml:vcat28) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_137) (divide (plus (minus (plus (plus (plus (minus (plus (minus (plus %sbml:vcat5 %sbml:vcat12) %sbml:von18) %sbml:voff18) %sbml:von19) %sbml:voff19) %sbml:vcat25) %sbml:vcat26) %sbml:von20) %sbml:voff20) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D75CK1) (divide (minus (minus %sbml:von7 %sbml:voff7) %sbml:vcat7) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D75_PKA) (divide (minus (minus %sbml:von8 %sbml:vcat8) %sbml:voff8) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:PP2A) (divide (plus (plus (minus (plus (plus (minus (plus (plus (minus (plus (plus (minus (plus (minus %sbml:vcat9 %sbml:von9) %sbml:voff9) %sbml:von15) %sbml:vcat15) %sbml:voff15) %sbml:von22) %sbml:vcat22) %sbml:voff22) %sbml:von25) %sbml:vcat25) %sbml:voff25) %sbml:von33) %sbml:voff33) %sbml:vcat34) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D75_PP2A) (divide (minus (minus %sbml:von9 %sbml:vcat9) %sbml:voff9) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:PP2AP) (divide (minus (plus (plus (minus (plus (plus (plus (minus (plus (plus (minus (plus (minus %sbml:vcat10 %sbml:von10) %sbml:voff10) %sbml:von16) %sbml:vcat16) %sbml:voff16) %sbml:von23) %sbml:vcat23) %sbml:voff23) %sbml:vcat26) %sbml:von26) %sbml:voff26) %sbml:vcat33) %sbml:vcat34) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D75_PP2AP) (divide (minus (minus %sbml:von10 %sbml:vcat10) %sbml:voff10) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D75_137) (divide (plus (minus (plus (minus (plus (minus (plus (plus (minus (plus %sbml:vcat7 %sbml:vcat11) %sbml:von21) %sbml:voff21) %sbml:vcat27) %sbml:von22) %sbml:voff22) %sbml:von23) %sbml:voff23) %sbml:von24) %sbml:voff24) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D137_CDK5) (divide (minus (minus %sbml:von11 %sbml:voff11) %sbml:vcat11) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D137_PKA) (divide (minus (minus %sbml:von12 %sbml:voff12) %sbml:vcat12) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D137_PP2C) (divide (minus (minus %sbml:von13 %sbml:vcat13) %sbml:voff13) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:PP2C) (divide (plus (plus (minus (plus (plus (minus (plus (plus (minus (plus (minus %sbml:vcat13 %sbml:von13) %sbml:voff13) %sbml:von20) %sbml:vcat20) %sbml:voff20) %sbml:von24) %sbml:vcat24) %sbml:voff24) %sbml:von28) %sbml:vcat28) %sbml:voff28) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_75_CK1) (divide (minus (minus %sbml:von14 %sbml:voff14) %sbml:vcat14) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_137_CDK5) (divide (minus (minus %sbml:von18 %sbml:voff18) %sbml:vcat18) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_75_137) (divide (plus (minus (plus (minus (plus (minus (plus (minus (plus (plus %sbml:vcat14 %sbml:vcat18) %sbml:vcat21) %sbml:von27) %sbml:voff27) %sbml:von25) %sbml:voff25) %sbml:von26) %sbml:voff26) %sbml:von28) %sbml:voff28) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D75_137_PKA) (divide (minus (minus %sbml:von21 %sbml:vcat21) %sbml:voff21) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_75_PP2B) (divide (minus (minus %sbml:von17 %sbml:voff17) %sbml:vcat17) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_137_PP2B) (divide (minus (minus %sbml:von19 %sbml:vcat19) %sbml:voff19) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_75_137_PP2B) (divide (minus (minus %sbml:von27 %sbml:voff27) %sbml:vcat27) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_75_PP2A) (divide (minus (minus %sbml:von15 %sbml:vcat15) %sbml:voff15) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D75_137_PP2A) (divide (minus (minus %sbml:von22 %sbml:vcat22) %sbml:voff22) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_75_134_PP2A) (divide (minus (minus %sbml:von25 %sbml:vcat25) %sbml:voff25) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_75_PP2AP) (divide (minus (minus %sbml:von16 %sbml:vcat16) %sbml:voff16) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D75_137_PP2AP) (divide (minus (minus %sbml:von23 %sbml:vcat23) %sbml:voff23) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_75_137_PP2AP) (divide (minus (minus %sbml:von26 %sbml:vcat26) %sbml:voff26) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_137_PP2C) (divide (minus (minus %sbml:von20 %sbml:vcat20) %sbml:voff20) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D75_137_PP2C) (divide (minus (minus %sbml:von24 %sbml:vcat24) %sbml:voff24) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:PDE) (divide (plus (plus (minus (plus (minus %sbml:voff31 %sbml:von31) %sbml:vcat32) %sbml:von44) %sbml:voff44) %sbml:vcat44) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:PP2Binactive) (divide (minus %sbml:voff35 %sbml:von35) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:D34_75_137_PP2C) (divide (minus (minus %sbml:von28 %sbml:vcat28) %sbml:voff28) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:CK1P) (divide (plus (minus %sbml:voff29 %sbml:von29) %sbml:vcat30) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:CK1P_PP2B) (divide (minus (minus %sbml:von29 %sbml:voff29) %sbml:vcat29) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:PDE_PKA) (divide (minus (minus %sbml:von31 %sbml:vcat31) %sbml:voff31) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:PDEP) (divide (plus (plus (minus (minus %sbml:vcat31 %sbml:vcat32) %sbml:von45) %sbml:voff45) %sbml:vcat45) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:PP2A_PKA) (divide (minus (minus %sbml:von33 %sbml:voff33) %sbml:vcat33) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:Ca) (divide (minus (plus (plus (minus (times 2 %sbml:voff35) (plus (times 2 %sbml:von35) (times 2 %sbml:von36))) (times 2 %sbml:voff36)) %sbml:v57) %sbml:v58) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:PP2BinactiveCa2) (divide (plus (minus (minus %sbml:von35 %sbml:von36) %sbml:voff35) %sbml:voff36) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:R2C2) (divide (minus %sbml:voff37 %sbml:von37) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:cAMP) (divide (plus (minus (plus (minus (plus (plus (plus (minus %sbml:voff37 (plus (plus (plus %sbml:von37 %sbml:von38) %sbml:von39) %sbml:von40)) %sbml:voff38) %sbml:voff39) %sbml:voff40) %sbml:von44) %sbml:voff44) %sbml:von45) %sbml:voff45) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:cAMP_R2C2) (divide (plus (minus (minus %sbml:von37 %sbml:von38) %sbml:voff37) %sbml:voff38) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:cAMP2_R2C2) (divide (plus (minus (minus %sbml:von38 %sbml:von39) %sbml:voff38) %sbml:voff39) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:cAMP3_R2C2) (divide (plus (minus (minus %sbml:von39 %sbml:von40) %sbml:voff39) %sbml:voff40) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:cAMP4_R2C2) (divide (minus (plus (minus %sbml:von40 %sbml:voff40) %sbml:von41) %sbml:voff41) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:cAMP4_R2C) (divide (minus (plus (minus %sbml:voff41 %sbml:von41) %sbml:von42) %sbml:von43) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:cAMP4_R2) (divide (minus %sbml:von43 %sbml:von42) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:cAMP_PDE) (divide (minus (minus %sbml:von44 %sbml:voff44) %sbml:vcat44) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:AMP) (divide (plus %sbml:vcat44 %sbml:vcat45) %sbml:Spine))",
		"00000000000000000000000000000000 (eq (diff (bvar %time) %sbml:cAMP_PDEP) (divide (minus (minus %sbml:von45 %sbml:voff45) %sbml:vcat45) %sbml:Spine))"
	};

	ReadAndCheck(TEST_MODELS("BIOMD0000000152.xml"),
				 variables,
				 input_values,
				 input_functions,
				 input_odes);
}

BOOST_AUTO_TEST_SUITE_END()
